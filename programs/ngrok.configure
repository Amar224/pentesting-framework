cd server

if [ ! -f "ngrok" ]
then
:
else
net_check() {
connection="$(ping -c 1 -q www.google.com &> /dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then
printf "\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, debug: connection\n"
exit
fi
}
stop() {
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkssh=$(ps aux | grep -o "ssh" | head -n1)
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
killall -2 ssh > /dev/null 2>&1
fi
}

stop &> /dev/null

./ngrok http 8080 > /dev/null 2>&1 &
http_ngrok() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
}
sleep 0
printf "\e[94m(\e[0m>\e[94m)\e[0m Starting server at http port:(8080)...\e[0m                 \n"
net_check
http_ngrok
if [[ -z $link ]];then
printf "$link" &> /dev/null
sleep 10
http_ngrok
printf "$link" &> /dev/null
fi
if [[ -z $link ]];then
printf "\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, debug: ./ngrok http (8080)...\e[0m                     \n"
exit 1
fi
printf "\e[94m(\e[0m>\e[94m)\e[0m Your webpage https link: \e[4m${link}\e[0m           \e[0m"
echo
fi

cd ..
