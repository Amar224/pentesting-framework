#!/usr/bin/bash

SCRIPT_PATH=$(pwd)

if [[ ${input} != "1" ]]
then
if [[ ! $__return__ == 105 ]];then
bash ${CWD}/assets/programs/tunnel.installer
else
cd $TMPDIR
if [ ! -d "$TMPDIR/server" ]
then
mkdir -p ${TMPDIR}/server
fi
bash <(curl -sL "${RAWLINK}/assets/programs/tunnel.installer")
fi
fi

CLR() {
printf "                                                               \r"
}

net_check() {
connection="$(curl -Is http://www.google.com &> /dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then
printf "\e[94m(\e[0m>\e[94m)\e[0m Tunnel error, debug: connection\n"
exit
fi
}
stop() {
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
checkcloudflared=$(ps aux | grep -o "cloudflared" | head -n1)
checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkssh=$(ps aux | grep -o "ssh" | head -n1)
if [[ $checkcloudflared == *'cloudflared'* ]]; then
killall -2 cloudflared > /dev/null 2>&1
fi
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
killall -2 ssh > /dev/null 2>&1
fi

  if [[ `pidof php` ]]; then
		killall php > /dev/null 2>&1
	fi
	if [[ `pidof ngrok` ]]; then
		killall ngrok > /dev/null 2>&1
	fi
	if [[ `pidof cloudflared` ]]; then
		killall cloudflared > /dev/null 2>&1
	fi
}

stop &> /dev/null

ngrok-server()
{
if [[ $OS == *'Android'* ]];then
./ngrok http ${port} > /dev/null 2>&1 &
else
sudo ./ngrok http ${port} > /dev/null 2>&1 &
fi


http_ngrok() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[-0-9a-z]*\.ngrok.io")
}

sleep 0
CLR

net_check
http_ngrok

if [[ -z $link ]];then
printf "$link" &> /dev/null
progress-bar "__wait__ 10" "0.0350" "prog:1" "Starting Server at http Port : (${port})..." -r
printf "${b0SIGN} Started Server at http Port : (${port})..."
http_ngrok
printf "$link" &> /dev/null
fi
if [[ -z $link ]];then
CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, debug: ./ngrok http (${port})...\e[0m\n"
stop &> /dev/null
exit 1
fi
}

cloudflare-server()
{
if [[ -f ".cflare.log" ]]
then
	rm .cflare.log &> /dev/null
fi

#php -S localhost:8080 > /dev/null 2>&1 &

if [[ $OS == *'Android'* ]];then
proot -0 ./cloudflared tunnel -url 127.0.0.1:${port} --logfile .cflare.log > /dev/null 2>&1 &
else
./cloudflared tunnel -url 127.0.0.1:${port} --logfile .cflare.log > /dev/null 2>&1 &
fi

http_cloudflared() {
  link=$(grep -o 'https://[-0-9a-z]*\.trycloudflare.com' ".cflare.log")
}
sleep 0
CLR

net_check
sleep 1
http_cloudflared &> /dev/null

if [[ -z $link ]];then
printf "$link" &> /dev/null
progress-bar "__wait__ 5" "0" "prog:4" "Starting Server at http Port : (${port})..." -r
printf "${b0SIGN} Started Server at http Port : (${port})..."
http_cloudflared &> /dev/null
printf "$link" &> /dev/null
fi
if [[ -z $link ]];then
CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m cloudflared error, debug: ./cloudflared http (${port})...\e[0m\n"
stop &> /dev/null
exit 1
fi
}

get_input()
{
if [[ $input == "1" ]]
then
	link="http://127.0.0.1:${port}"
elif [[ $input == "2" ]]
then
	cloudflare-server
elif [[ $input == "3" ]]
then
	ngrok-server
fi

CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m Your https link : \e[4m${link}\e[0m\n"
}


read -r -p "${R4}psf${R0} (${C1}web/path${R0}) > " path

if [[ ! -d "${path}" ]]
then
	printf "${r0SIGN} path not found.\n"
	exit 1
fi

read -r -p "${R4}psf${R0} (${C1}web/port${R0}) > " port
cd ${path}
printf "\n"
php -S localhost:${port} > /dev/null 2>&1 &
cd $SCRIPT_PATH/server
get_input
